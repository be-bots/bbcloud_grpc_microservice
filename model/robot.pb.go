// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: robot.proto

package model

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RobotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RobotRequest) Reset() {
	*x = RobotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotRequest) ProtoMessage() {}

func (x *RobotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotRequest.ProtoReflect.Descriptor instead.
func (*RobotRequest) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{0}
}

func (x *RobotRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Robot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sid           int32   `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
	System        *System `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	Uri           string  `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	WaterFactor   float64 `protobuf:"fixed64,5,opt,name=water_factor,json=waterFactor,proto3" json:"water_factor,omitempty"`
	WaterFlow     float64 `protobuf:"fixed64,6,opt,name=water_flow,json=waterFlow,proto3" json:"water_flow,omitempty"`
	TankPosY      int32   `protobuf:"varint,7,opt,name=tank_pos_y,json=tankPosY,proto3" json:"tank_pos_y,omitempty"`
	ScanOffset    int32   `protobuf:"varint,8,opt,name=scan_offset,json=scanOffset,proto3" json:"scan_offset,omitempty"`
	DownPosZ      int32   `protobuf:"varint,9,opt,name=down_pos_z,json=downPosZ,proto3" json:"down_pos_z,omitempty"`
	SortInSlotId  int32   `protobuf:"varint,10,opt,name=sort_in_slot_id,json=sortInSlotId,proto3" json:"sort_in_slot_id,omitempty"`
	TakeOutSlotId int32   `protobuf:"varint,12,opt,name=take_out_slot_id,json=takeOutSlotId,proto3" json:"take_out_slot_id,omitempty"`
}

func (x *Robot) Reset() {
	*x = Robot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Robot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Robot) ProtoMessage() {}

func (x *Robot) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Robot.ProtoReflect.Descriptor instead.
func (*Robot) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{1}
}

func (x *Robot) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Robot) GetSid() int32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *Robot) GetSystem() *System {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Robot) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Robot) GetWaterFactor() float64 {
	if x != nil {
		return x.WaterFactor
	}
	return 0
}

func (x *Robot) GetWaterFlow() float64 {
	if x != nil {
		return x.WaterFlow
	}
	return 0
}

func (x *Robot) GetTankPosY() int32 {
	if x != nil {
		return x.TankPosY
	}
	return 0
}

func (x *Robot) GetScanOffset() int32 {
	if x != nil {
		return x.ScanOffset
	}
	return 0
}

func (x *Robot) GetDownPosZ() int32 {
	if x != nil {
		return x.DownPosZ
	}
	return 0
}

func (x *Robot) GetSortInSlotId() int32 {
	if x != nil {
		return x.SortInSlotId
	}
	return 0
}

func (x *Robot) GetTakeOutSlotId() int32 {
	if x != nil {
		return x.TakeOutSlotId
	}
	return 0
}

type Robots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robots []*Robot `protobuf:"bytes,1,rep,name=robots,proto3" json:"robots,omitempty"`
}

func (x *Robots) Reset() {
	*x = Robots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Robots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Robots) ProtoMessage() {}

func (x *Robots) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Robots.ProtoReflect.Descriptor instead.
func (*Robots) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{2}
}

func (x *Robots) GetRobots() []*Robot {
	if x != nil {
		return x.Robots
	}
	return nil
}

var File_robot_proto protoreflect.FileDescriptor

var file_robot_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x1e, 0x0a, 0x0c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xd1, 0x02, 0x0a, 0x05, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x77, 0x61, 0x74, 0x65,
	0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x61, 0x74, 0x65, 0x72,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x77, 0x61, 0x74,
	0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x61, 0x6e, 0x6b, 0x5f, 0x70,
	0x6f, 0x73, 0x5f, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x6e, 0x6b,
	0x50, 0x6f, 0x73, 0x59, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63, 0x61, 0x6e, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x6f,
	0x73, 0x5f, 0x7a, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x50,
	0x6f, 0x73, 0x5a, 0x12, 0x25, 0x0a, 0x0f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x6f,
	0x72, 0x74, 0x49, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x74, 0x61,
	0x6b, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x61, 0x6b, 0x65, 0x4f, 0x75, 0x74, 0x53, 0x6c, 0x6f,
	0x74, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x06, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x12, 0x24, 0x0a,
	0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x06, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x73, 0x32, 0x74, 0x0a, 0x0c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12,
	0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_robot_proto_rawDescOnce sync.Once
	file_robot_proto_rawDescData = file_robot_proto_rawDesc
)

func file_robot_proto_rawDescGZIP() []byte {
	file_robot_proto_rawDescOnce.Do(func() {
		file_robot_proto_rawDescData = protoimpl.X.CompressGZIP(file_robot_proto_rawDescData)
	})
	return file_robot_proto_rawDescData
}

var file_robot_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_robot_proto_goTypes = []interface{}{
	(*RobotRequest)(nil), // 0: model.RobotRequest
	(*Robot)(nil),        // 1: model.Robot
	(*Robots)(nil),       // 2: model.Robots
	(*System)(nil),       // 3: model.System
	(*empty.Empty)(nil),  // 4: google.protobuf.Empty
}
var file_robot_proto_depIdxs = []int32{
	3, // 0: model.Robot.system:type_name -> model.System
	1, // 1: model.Robots.robots:type_name -> model.Robot
	0, // 2: model.RobotService.GetRobot:input_type -> model.RobotRequest
	4, // 3: model.RobotService.GetAllRobots:input_type -> google.protobuf.Empty
	1, // 4: model.RobotService.GetRobot:output_type -> model.Robot
	2, // 5: model.RobotService.GetAllRobots:output_type -> model.Robots
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_robot_proto_init() }
func file_robot_proto_init() {
	if File_robot_proto != nil {
		return
	}
	file_system_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_robot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Robot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Robots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_robot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_robot_proto_goTypes,
		DependencyIndexes: file_robot_proto_depIdxs,
		MessageInfos:      file_robot_proto_msgTypes,
	}.Build()
	File_robot_proto = out.File
	file_robot_proto_rawDesc = nil
	file_robot_proto_goTypes = nil
	file_robot_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RobotServiceClient is the client API for RobotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RobotServiceClient interface {
	GetRobot(ctx context.Context, in *RobotRequest, opts ...grpc.CallOption) (*Robot, error)
	GetAllRobots(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Robots, error)
}

type robotServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRobotServiceClient(cc grpc.ClientConnInterface) RobotServiceClient {
	return &robotServiceClient{cc}
}

func (c *robotServiceClient) GetRobot(ctx context.Context, in *RobotRequest, opts ...grpc.CallOption) (*Robot, error) {
	out := new(Robot)
	err := c.cc.Invoke(ctx, "/model.RobotService/GetRobot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *robotServiceClient) GetAllRobots(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Robots, error) {
	out := new(Robots)
	err := c.cc.Invoke(ctx, "/model.RobotService/GetAllRobots", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RobotServiceServer is the server API for RobotService service.
type RobotServiceServer interface {
	GetRobot(context.Context, *RobotRequest) (*Robot, error)
	GetAllRobots(context.Context, *empty.Empty) (*Robots, error)
}

// UnimplementedRobotServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRobotServiceServer struct {
}

func (*UnimplementedRobotServiceServer) GetRobot(context.Context, *RobotRequest) (*Robot, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRobot not implemented")
}
func (*UnimplementedRobotServiceServer) GetAllRobots(context.Context, *empty.Empty) (*Robots, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllRobots not implemented")
}

func RegisterRobotServiceServer(s *grpc.Server, srv RobotServiceServer) {
	s.RegisterService(&_RobotService_serviceDesc, srv)
}

func _RobotService_GetRobot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RobotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RobotServiceServer).GetRobot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.RobotService/GetRobot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RobotServiceServer).GetRobot(ctx, req.(*RobotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RobotService_GetAllRobots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RobotServiceServer).GetAllRobots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.RobotService/GetAllRobots",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RobotServiceServer).GetAllRobots(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _RobotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.RobotService",
	HandlerType: (*RobotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRobot",
			Handler:    _RobotService_GetRobot_Handler,
		},
		{
			MethodName: "GetAllRobots",
			Handler:    _RobotService_GetAllRobots_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "robot.proto",
}
