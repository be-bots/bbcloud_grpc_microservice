// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: slot.proto

package model

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Slot_Type int32

const (
	Slot_SORT_IN_AREA  Slot_Type = 0
	Slot_TAKE_OUT_AREA Slot_Type = 1
	Slot_GROWING_AREA  Slot_Type = 2
)

// Enum value maps for Slot_Type.
var (
	Slot_Type_name = map[int32]string{
		0: "SORT_IN_AREA",
		1: "TAKE_OUT_AREA",
		2: "GROWING_AREA",
	}
	Slot_Type_value = map[string]int32{
		"SORT_IN_AREA":  0,
		"TAKE_OUT_AREA": 1,
		"GROWING_AREA":  2,
	}
)

func (x Slot_Type) Enum() *Slot_Type {
	p := new(Slot_Type)
	*p = x
	return p
}

func (x Slot_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Slot_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_slot_proto_enumTypes[0].Descriptor()
}

func (Slot_Type) Type() protoreflect.EnumType {
	return &file_slot_proto_enumTypes[0]
}

func (x Slot_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Slot_Type.Descriptor instead.
func (Slot_Type) EnumDescriptor() ([]byte, []int) {
	return file_slot_proto_rawDescGZIP(), []int{1, 0}
}

type SlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SlotRequest) Reset() {
	*x = SlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotRequest) ProtoMessage() {}

func (x *SlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotRequest.ProtoReflect.Descriptor instead.
func (*SlotRequest) Descriptor() ([]byte, []int) {
	return file_slot_proto_rawDescGZIP(), []int{0}
}

func (x *SlotRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sid    int32     `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
	System *System   `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	Rid    int32     `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty"`
	Robot  *Robot    `protobuf:"bytes,5,opt,name=robot,proto3" json:"robot,omitempty"`
	Pos    int32     `protobuf:"varint,6,opt,name=pos,proto3" json:"pos,omitempty"`
	Gid    int32     `protobuf:"varint,7,opt,name=gid,proto3" json:"gid,omitempty"`
	Gutter *Gutter   `protobuf:"bytes,8,opt,name=gutter,proto3" json:"gutter,omitempty"`
	Type   Slot_Type `protobuf:"varint,9,opt,name=type,proto3,enum=model.Slot_Type" json:"type,omitempty"`
}

func (x *Slot) Reset() {
	*x = Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slot) ProtoMessage() {}

func (x *Slot) ProtoReflect() protoreflect.Message {
	mi := &file_slot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slot.ProtoReflect.Descriptor instead.
func (*Slot) Descriptor() ([]byte, []int) {
	return file_slot_proto_rawDescGZIP(), []int{1}
}

func (x *Slot) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Slot) GetSid() int32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *Slot) GetSystem() *System {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Slot) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *Slot) GetRobot() *Robot {
	if x != nil {
		return x.Robot
	}
	return nil
}

func (x *Slot) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *Slot) GetGid() int32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *Slot) GetGutter() *Gutter {
	if x != nil {
		return x.Gutter
	}
	return nil
}

func (x *Slot) GetType() Slot_Type {
	if x != nil {
		return x.Type
	}
	return Slot_SORT_IN_AREA
}

type Slots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots []*Slot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *Slots) Reset() {
	*x = Slots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slots) ProtoMessage() {}

func (x *Slots) ProtoReflect() protoreflect.Message {
	mi := &file_slot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slots.ProtoReflect.Descriptor instead.
func (*Slots) Descriptor() ([]byte, []int) {
	return file_slot_proto_rawDescGZIP(), []int{2}
}

func (x *Slots) GetSlots() []*Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

var File_slot_proto protoreflect.FileDescriptor

var file_slot_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x1a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0c, 0x67, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0b, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x0b, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb5, 0x02, 0x0a, 0x04, 0x53, 0x6c, 0x6f,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x73, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x05,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70,
	0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x67, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x75, 0x74, 0x74, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x75, 0x74,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x67, 0x75, 0x74, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x3d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x4f, 0x52,
	0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54,
	0x41, 0x4b, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x47, 0x52, 0x4f, 0x57, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x10, 0x02,
	0x22, 0x2a, 0x0a, 0x05, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x32, 0x6e, 0x0a, 0x0b,
	0x53, 0x6c, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53,
	0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x42, 0x09, 0x5a, 0x07,
	0x2e, 0x3b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_slot_proto_rawDescOnce sync.Once
	file_slot_proto_rawDescData = file_slot_proto_rawDesc
)

func file_slot_proto_rawDescGZIP() []byte {
	file_slot_proto_rawDescOnce.Do(func() {
		file_slot_proto_rawDescData = protoimpl.X.CompressGZIP(file_slot_proto_rawDescData)
	})
	return file_slot_proto_rawDescData
}

var file_slot_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_slot_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_slot_proto_goTypes = []interface{}{
	(Slot_Type)(0),      // 0: model.Slot.Type
	(*SlotRequest)(nil), // 1: model.SlotRequest
	(*Slot)(nil),        // 2: model.Slot
	(*Slots)(nil),       // 3: model.Slots
	(*System)(nil),      // 4: model.System
	(*Robot)(nil),       // 5: model.Robot
	(*Gutter)(nil),      // 6: model.Gutter
	(*empty.Empty)(nil), // 7: google.protobuf.Empty
}
var file_slot_proto_depIdxs = []int32{
	4, // 0: model.Slot.system:type_name -> model.System
	5, // 1: model.Slot.robot:type_name -> model.Robot
	6, // 2: model.Slot.gutter:type_name -> model.Gutter
	0, // 3: model.Slot.type:type_name -> model.Slot.Type
	2, // 4: model.Slots.slots:type_name -> model.Slot
	1, // 5: model.SlotService.GetSlot:input_type -> model.SlotRequest
	7, // 6: model.SlotService.GetAllSlots:input_type -> google.protobuf.Empty
	2, // 7: model.SlotService.GetSlot:output_type -> model.Slot
	3, // 8: model.SlotService.GetAllSlots:output_type -> model.Slots
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_slot_proto_init() }
func file_slot_proto_init() {
	if File_slot_proto != nil {
		return
	}
	file_system_proto_init()
	file_gutter_proto_init()
	file_robot_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_slot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_slot_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_slot_proto_goTypes,
		DependencyIndexes: file_slot_proto_depIdxs,
		EnumInfos:         file_slot_proto_enumTypes,
		MessageInfos:      file_slot_proto_msgTypes,
	}.Build()
	File_slot_proto = out.File
	file_slot_proto_rawDesc = nil
	file_slot_proto_goTypes = nil
	file_slot_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SlotServiceClient is the client API for SlotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SlotServiceClient interface {
	GetSlot(ctx context.Context, in *SlotRequest, opts ...grpc.CallOption) (*Slot, error)
	GetAllSlots(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Slots, error)
}

type slotServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSlotServiceClient(cc grpc.ClientConnInterface) SlotServiceClient {
	return &slotServiceClient{cc}
}

func (c *slotServiceClient) GetSlot(ctx context.Context, in *SlotRequest, opts ...grpc.CallOption) (*Slot, error) {
	out := new(Slot)
	err := c.cc.Invoke(ctx, "/model.SlotService/GetSlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotServiceClient) GetAllSlots(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Slots, error) {
	out := new(Slots)
	err := c.cc.Invoke(ctx, "/model.SlotService/GetAllSlots", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SlotServiceServer is the server API for SlotService service.
type SlotServiceServer interface {
	GetSlot(context.Context, *SlotRequest) (*Slot, error)
	GetAllSlots(context.Context, *empty.Empty) (*Slots, error)
}

// UnimplementedSlotServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSlotServiceServer struct {
}

func (*UnimplementedSlotServiceServer) GetSlot(context.Context, *SlotRequest) (*Slot, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSlot not implemented")
}
func (*UnimplementedSlotServiceServer) GetAllSlots(context.Context, *empty.Empty) (*Slots, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllSlots not implemented")
}

func RegisterSlotServiceServer(s *grpc.Server, srv SlotServiceServer) {
	s.RegisterService(&_SlotService_serviceDesc, srv)
}

func _SlotService_GetSlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SlotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotServiceServer).GetSlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.SlotService/GetSlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotServiceServer).GetSlot(ctx, req.(*SlotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotService_GetAllSlots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotServiceServer).GetAllSlots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.SlotService/GetAllSlots",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotServiceServer).GetAllSlots(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SlotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.SlotService",
	HandlerType: (*SlotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSlot",
			Handler:    _SlotService_GetSlot_Handler,
		},
		{
			MethodName: "GetAllSlots",
			Handler:    _SlotService_GetAllSlots_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "slot.proto",
}
